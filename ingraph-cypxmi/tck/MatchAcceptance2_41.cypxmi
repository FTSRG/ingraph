<?xml version="1.0" encoding="UTF-8"?>
<openCypher:Cypher xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:openCypher="http://www.slizaa.org/neo4j/opencypher/OpenCypher">
  <queryOptions xsi:type="openCypher:AllOptions"/>
  <statement xsi:type="openCypher:SingleQuery">
    <clauses xsi:type="openCypher:Match">
      <pattern>
        <patterns xsi:type="openCypher:PatternElement">
          <nodepattern>
            <variable name="advertiser"/>
          </nodepattern>
          <chain>
            <relationshipPattern outgoing="true">
              <detail>
                <types>
                  <relTypeName>ADV_HAS_PRODUCT</relTypeName>
                </types>
              </detail>
            </relationshipPattern>
            <nodePattern>
              <variable name="out"/>
            </nodePattern>
          </chain>
          <chain>
            <relationshipPattern outgoing="true">
              <detail>
                <types>
                  <relTypeName>AP_HAS_VALUE</relTypeName>
                </types>
              </detail>
            </relationshipPattern>
            <nodePattern>
              <variable name="red"/>
            </nodePattern>
          </chain>
          <chain>
            <relationshipPattern incoming="true">
              <detail>
                <types>
                  <relTypeName>AA_HAS_VALUE</relTypeName>
                </types>
              </detail>
            </relationshipPattern>
            <nodePattern>
              <variable name="a"/>
            </nodePattern>
          </chain>
        </patterns>
      </pattern>
      <where>
        <expression xsi:type="openCypher:ExpressionAnd" operator="AND">
          <left xsi:type="openCypher:ExpressionAnd" operator="AND">
            <left xsi:type="openCypher:ExpressionAnd" operator="AND">
              <left xsi:type="openCypher:ExpressionComparison" operator="=">
                <left xsi:type="openCypher:ExpressionNodeLabelsAndPropertyLookup">
                  <left xsi:type="openCypher:VariableRef" variableRef="//@statement/@clauses.0/@pattern/@patterns.0/@nodepattern/@variable"/>
                  <propertyLookups propertyKeyName="id"/>
                </left>
                <right xsi:type="openCypher:Parameter" parameter="1"/>
              </left>
              <right xsi:type="openCypher:ExpressionComparison" operator="=">
                <left xsi:type="openCypher:ExpressionNodeLabelsAndPropertyLookup">
                  <left xsi:type="openCypher:VariableRef" variableRef="//@statement/@clauses.0/@pattern/@patterns.0/@chain.2/@nodePattern/@variable"/>
                  <propertyLookups propertyKeyName="id"/>
                </left>
                <right xsi:type="openCypher:Parameter" parameter="2"/>
              </right>
            </left>
            <right xsi:type="openCypher:ExpressionComparison" operator="=">
              <left xsi:type="openCypher:ExpressionNodeLabelsAndPropertyLookup">
                <left xsi:type="openCypher:VariableRef" variableRef="//@statement/@clauses.0/@pattern/@patterns.0/@chain.1/@nodePattern/@variable"/>
                <propertyLookups propertyKeyName="name"/>
              </left>
              <right xsi:type="openCypher:StringConstant" value="'red'"/>
            </right>
          </left>
          <right xsi:type="openCypher:ExpressionComparison" operator="=">
            <left xsi:type="openCypher:ExpressionNodeLabelsAndPropertyLookup">
              <left xsi:type="openCypher:VariableRef" variableRef="//@statement/@clauses.0/@pattern/@patterns.0/@chain.0/@nodePattern/@variable"/>
              <propertyLookups propertyKeyName="name"/>
            </left>
            <right xsi:type="openCypher:StringConstant" value="'product1'"/>
          </right>
        </expression>
      </where>
    </clauses>
    <clauses xsi:type="openCypher:Return" return="RETURN">
      <body xsi:type="openCypher:ReturnItems">
        <items>
          <expression xsi:type="openCypher:ExpressionNodeLabelsAndPropertyLookup">
            <left xsi:type="openCypher:VariableRef" variableRef="//@statement/@clauses.0/@pattern/@patterns.0/@chain.0/@nodePattern/@variable"/>
            <propertyLookups propertyKeyName="name"/>
          </expression>
        </items>
      </body>
    </clauses>
  </statement>
</openCypher:Cypher>
