<?xml version="1.0" encoding="UTF-8"?>
<openCypher:Cypher xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:openCypher="http://www.slizaa.org/neo4j/opencypher/OpenCypher">
  <queryOptions xsi:type="openCypher:AllOptions"/>
  <statement xsi:type="openCypher:SingleQuery">
    <clauses xsi:type="openCypher:Match">
      <pattern>
        <patterns xsi:type="openCypher:PatternElement">
          <nodepattern>
            <variable name="semaphore"/>
            <nodeLabels>
              <nodeLabels labelName="Semaphore"/>
            </nodeLabels>
          </nodepattern>
          <chain>
            <relationshipPattern incoming="true">
              <detail>
                <types>
                  <relTypeName>exit</relTypeName>
                </types>
              </detail>
            </relationshipPattern>
            <nodePattern>
              <variable name="route1"/>
              <nodeLabels>
                <nodeLabels labelName="Route"/>
              </nodeLabels>
            </nodePattern>
          </chain>
          <chain>
            <relationshipPattern outgoing="true">
              <detail>
                <types>
                  <relTypeName>gathers</relTypeName>
                </types>
              </detail>
            </relationshipPattern>
            <nodePattern>
              <variable name="sensor1"/>
              <nodeLabels>
                <nodeLabels labelName="Sensor"/>
              </nodeLabels>
            </nodePattern>
          </chain>
          <chain>
            <relationshipPattern incoming="true">
              <detail>
                <types>
                  <relTypeName>monitoredBy</relTypeName>
                </types>
              </detail>
            </relationshipPattern>
            <nodePattern>
              <variable name="te1"/>
            </nodePattern>
          </chain>
          <chain>
            <relationshipPattern outgoing="true">
              <detail>
                <types>
                  <relTypeName>connectsTo</relTypeName>
                </types>
              </detail>
            </relationshipPattern>
            <nodePattern>
              <variable name="te2"/>
            </nodePattern>
          </chain>
          <chain>
            <relationshipPattern outgoing="true">
              <detail>
                <types>
                  <relTypeName>monitoredBy</relTypeName>
                </types>
              </detail>
            </relationshipPattern>
            <nodePattern>
              <variable name="sensor2"/>
              <nodeLabels>
                <nodeLabels labelName="Sensor"/>
              </nodeLabels>
            </nodePattern>
          </chain>
          <chain>
            <relationshipPattern incoming="true">
              <detail>
                <types>
                  <relTypeName>gathers</relTypeName>
                </types>
              </detail>
            </relationshipPattern>
            <nodePattern>
              <variable name="route2"/>
              <nodeLabels>
                <nodeLabels labelName="Route"/>
              </nodeLabels>
            </nodePattern>
          </chain>
        </patterns>
      </pattern>
      <where>
        <expression xsi:type="openCypher:ExpressionAnd" operator="AND">
          <left operator="NOT">
            <left xsi:type="openCypher:ParenthesizedExpression">
              <expression xsi:type="openCypher:RelationshipsPattern">
                <nodePattern>
                  <variable name="semaphore"/>
                </nodePattern>
                <chain>
                  <relationshipPattern incoming="true">
                    <detail>
                      <types>
                        <relTypeName>entry</relTypeName>
                      </types>
                    </detail>
                  </relationshipPattern>
                  <nodePattern>
                    <variable name="route2"/>
                  </nodePattern>
                </chain>
              </expression>
            </left>
          </left>
          <right xsi:type="openCypher:ExpressionComparison" operator="!=">
            <left xsi:type="openCypher:VariableRef" variableRef="//@statement/@clauses.0/@pattern/@patterns.0/@chain.0/@nodePattern/@variable"/>
            <right xsi:type="openCypher:VariableRef" variableRef="//@statement/@clauses.0/@pattern/@patterns.0/@chain.5/@nodePattern/@variable"/>
          </right>
        </expression>
      </where>
    </clauses>
    <clauses xsi:type="openCypher:Return" return="RETURN" distinct="true">
      <body xsi:type="openCypher:ReturnItems">
        <items>
          <expression xsi:type="openCypher:VariableRef" variableRef="//@statement/@clauses.0/@pattern/@patterns.0/@nodepattern/@variable"/>
        </items>
        <items>
          <expression xsi:type="openCypher:VariableRef" variableRef="//@statement/@clauses.0/@pattern/@patterns.0/@chain.0/@nodePattern/@variable"/>
        </items>
        <items>
          <expression xsi:type="openCypher:VariableRef" variableRef="//@statement/@clauses.0/@pattern/@patterns.0/@chain.5/@nodePattern/@variable"/>
        </items>
        <items>
          <expression xsi:type="openCypher:VariableRef" variableRef="//@statement/@clauses.0/@pattern/@patterns.0/@chain.1/@nodePattern/@variable"/>
        </items>
        <items>
          <expression xsi:type="openCypher:VariableRef" variableRef="//@statement/@clauses.0/@pattern/@patterns.0/@chain.4/@nodePattern/@variable"/>
        </items>
        <items>
          <expression xsi:type="openCypher:VariableRef" variableRef="//@statement/@clauses.0/@pattern/@patterns.0/@chain.2/@nodePattern/@variable"/>
        </items>
        <items>
          <expression xsi:type="openCypher:VariableRef" variableRef="//@statement/@clauses.0/@pattern/@patterns.0/@chain.3/@nodePattern/@variable"/>
        </items>
      </body>
    </clauses>
  </statement>
</openCypher:Cypher>
